services:
  app:
    build:
      context: .
      dockerfile: ./docker-files/php/8.2/Dockerfile.prod # Specify the production Dockerfile
    container_name: pennywise_app_prod
    restart: unless-stopped
    tty: false
    working_dir: /var/www/pennywise
    environment:
      APP_ENV: production
      APP_DEBUG: false
      DB_CONNECTION: mysql
      DB_HOST:
      DB_PORT: 3306
      DB_DATABASE:
      DB_USERNAME:
      DB_PASSWORD:
    volumes:
      - ./:/var/www/pennywise
    networks:
      - pennywise

  # NGINX service
  webserver:
    build:
      context: .
      dockerfile: ./docker-files/nginx/Dockerfile # Reuse your NGINX Dockerfile
    container_name: pennywise_webserver_prod
    restart: unless-stopped
    depends_on:
      - app
    ports:
      - "80:80" # HTTP
      - "443:443" # HTTPS
    volumes:
      - ./:/var/www/pennywise
      - ./docker-files/nginx/certs/prod-cert.pem:/etc/nginx/certs/prod-cert.pem
      - ./docker-files/nginx/certs/prod-cert-key.pem:/etc/nginx/certs/prod-cert-key.pem
    networks:
      - pennywise

  # MySQL Production Database Service // optional
  prod-db:
    image: mysql:latest
    container_name: pennywise_db_prod
    environment:
      MYSQL_DATABASE:
      MYSQL_USER:
      MYSQL_PASSWORD:
      MYSQL_ROOT_PASSWORD:
    volumes:
      - ./storage/dbdata_prod:/var/lib/mysql
    networks:
      - pennywise

  # Redis service // optional
  redis:
    image: redis:alpine
    container_name: pennywise_redis_prod
    ports:
      - "6379:6379"
    networks:
      - pennywise

networks:
  pennywise:
    driver: bridge
